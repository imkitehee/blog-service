plugins {
    id 'java'
    id 'java-library'
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group 'com.yeonhee.blog'
description = "blog-service-api"
sourceCompatibility = JavaVersion.VERSION_11
version '1.0-SNAPSHOT'

allprojects {
    repositories {
        mavenCentral()
    }
}

bootJar {
    enabled = false
}
jar {
    enabled = true
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'com.yeonhee'

    ext {
        springCloudVersion = '2021.0.1'
    }

    // 서브 모듈 공통 디펜던시
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'com.fasterxml.jackson.core:jackson-databind'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    configurations {
        asciidoctorExt
    }

    test {
        useJUnitPlatform()
    }

    springBoot {
        buildInfo()
    }
}

project(':application') {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }
}

project(':application:client-api') {
    apply plugin: 'org.asciidoctor.jvm.convert'

    ext {
        snippetsDir = file('build/generated-snippets')
    }

    test {
        outputs.dir snippetsDir
    }

    asciidoctor {
        inputs.dir snippetsDir
        dependsOn test
        baseDirFollowsSourceDir()
        configurations 'asciidoctorExt'
    }

    asciidoctor.doFirst {
        delete file('src/main/resources/static/docs')
    }

    task copyDocument(type: Copy) {
        dependsOn asciidoctor
        from file("build/docs/asciidoc")
        into file("src/main/resources/static/docs")
    }

    build {
        dependsOn copyDocument
    }

    bootJar {
        dependsOn asciidoctor
        from("${asciidoctor.outputDir}") {
            into "static/docs"
        }
    }

    bootJar.enabled = true
    jar.enabled = false

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
        }
    }

    dependencies {
        implementation project(':domain')
        implementation project(":common")

        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation "org.springframework.boot:spring-boot-starter-data-jpa"
        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
        asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    }
}

project(':domain') {
    bootJar.enabled = false
    jar.enabled = true

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
        }
    }

    dependencies {
        implementation project(":common")

        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'it.ozimov:embedded-redis:0.7.2'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.5.RELEASE'
    }
}

project(':common') {
    bootJar.enabled = false
    jar.enabled = true
}
